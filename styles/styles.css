/*  Code Institute's Milestone Project 1: Build a Static Website. 
    Author: Alexis Van Espen. 
*/

/*  Fonts. */
@import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600&family=Nanum+Gothic:wght@400;700;800&display=swap');

/*  Initialize attributes (namely to anticipate responsive layout). 
    Inspired by, then adapted from, Clarissa Peterson's Responsive Layout course on LinkedIn Learning (https://www.linkedin.com/learning/responsive-layout/). 
*/
html {
    box-sizing: border-box;
    font-family: 'Nanum Gothic', sans-serif;
    min-height: 100vh;
}
img {
	max-width: 100%;
}
*, *:before, *:after {
	box-sizing: inherit;
    margin: 0;
    padding: 0;
}
a {
    text-decoration: none;
}

/*  Design mobile-first. Simple stack of columns. Older browsers, with no support for grid, can display this layout. 
    This concern for accessibility was taken for Morten Rand-Hendriksen's course on LinkedIn Learning: 
    "CSS: Advanced Layouts with Grid" (https://www.linkedin.com/learning/css-advanced-layouts-with-grid/). */
body {
    margin: 5px;
    padding: 5px;
}

/*  -------------------- Header -------------------- */
header {

}
header img {
    background-color: #009900;
}
header h1, h2 {
    background-color: #005B00;
    color: #fff;
    font-family: 'Montserrat', sans-serif;
    font-weight: 400;
    padding: 0.5em;
    text-align: center;
}
header h1 {
    font-size: 200%;
}
header h2 {
    font-size: 100%;
}

/* -------------------- Navigation -------------------- */
nav {
    background-color: #BF5700;
    display: flex;
    flex-flow: column wrap;
}
nav a {
    display: block;
    padding: 2em 1em;
    background-color: #fff;
    color: #BF5700;
}
main {
    background-color: #BF0000;
}

/* -------------------- Footer -------------------- */
footer {
    background-color: #007373;
    display: flex;
    flex-flow: row nowrap;
    justify-content: flex-start;
}
footer > div.thumbnail {
    border-radius: 50%;
    padding: 1em;
    margin: 1em;
    width: 5em;
    height: 5em;
    background-color: #fff;
}
footer a {
    color: #fff;
    padding: 1em;
}

/* -------------------- Cards -------------------- */
.card {
    
}

/* -------------------- Adjust grid layout at different breakpoints. -------------------- */
/*  Instead of testing whether the browser supports "display: grid" 
    -which some old browsers do, even though they don't support the latest features of grid-
    Morten Rand-Hendriksen (referenced above) recommends testing for "gried-area: auto".
*/
@supports (grid-area: auto) {

    @media screen and (min-width: 700px) {
        body {
            display: grid;
            grid-template-rows: 1fr 3fr 1fr;
            grid-template-columns: 1fr 4fr;
            grid-template-areas: 
                "header header"
                "nav    main"
                "footer footer"                
                ;
        }
        header {
            grid-area: header;
        }
        nav {
            grid-area: nav;
        }
        main {
            grid-area: main;
        }
        footer {
            grid-area: footer;
        }
    }
}